name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  create-rgs:
    name: 0️⃣ Criar Resource Groups
    runs-on: ubuntu-latest

    env:
      TF_VAR_subscription_id:         ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:               ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_admin_client_id:         ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_admin_client_secret:     ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_bootstrap_spn_object_id: ${{ secrets.ARM_OBJECT_ID }}


    steps:
      - uses: actions/checkout@v4

      - name: Azure Login (Admin SPN)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Init Terraform
        run: |
          cd infra
          terraform init

      - name: Plan Resource Groups
        run: |
          cd infra
          terraform plan \
            -target=azurerm_resource_group.rg_core \
            -target=azurerm_resource_group.rg_datalake \
            -out=rgs.plan

      - name: Apply Resource Groups
        run: |
          cd infra
          terraform apply -auto-approve rgs.plan

      - name: Upload Terraform State
        uses: actions/upload-artifact@v4
        with:
          name: tfstate-create
          path: infra/terraform.tfstate

  bootstrap:
    name: 1️⃣ Bootstrap SPN + Role Assignments + AKV
    needs: create-rgs
    runs-on: ubuntu-latest

    env:
      TF_VAR_subscription_id:         ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:               ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_admin_client_id:         ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_admin_client_secret:     ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_bootstrap_spn_object_id: ${{ secrets.ARM_OBJECT_ID }}


    steps:
      - uses: actions/checkout@v4

      - name: Download Terraform State
        uses: actions/download-artifact@v4
        with:
          name: tfstate-create
          path: infra/

      - name: Azure Login (Admin SPN)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Register Resource Providers
        run: |
          az provider register --namespace Microsoft.Resources
          az provider register --namespace Microsoft.Storage
          az provider register --namespace Microsoft.Databricks

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Init Terraform
        run: |
          cd infra
          terraform init

      - name: Plan SPN + Role Assignments + AKV
        run: |
          cd infra
          terraform plan \
            -target=module.service_principal \
            -target=azurerm_role_assignment.spn_contributor_datalake \
            -target=azurerm_role_assignment.spn_reader_subscription \
            -target=module.key_vault \
            -out=bootstrap.plan

      - name: Apply SPN + Role Assignments + AKV
        run: |
          cd infra
          terraform apply -auto-approve bootstrap.plan

      - name: Upload Terraform State
        uses: actions/upload-artifact@v4
        with:
          name: tfstate-bootstrap
          path: infra/terraform.tfstate

  deploy-infra:
    name: 2️⃣ Deploy Remaining Infra
    needs: bootstrap
    runs-on: ubuntu-latest

    env:
      TF_VAR_admin_client_id:         ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_admin_client_secret:     ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_tenant_id:               ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_subscription_id:         ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_bootstrap_spn_object_id: ${{ secrets.ARM_OBJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Download Terraform State
        uses: actions/download-artifact@v4
        with:
          name: tfstate-bootstrap
          path: infra/

      - name: Azure Login (Admin SPN)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Init Terraform
        run: |
          cd infra
          terraform init

      - name: Fetch SPN credentials from AKV
        id: get_spn
        run: |
          AKV="akv-medalforge-rbac-core"
          SPN_ID=$(az keyvault secret show --vault-name $AKV --name spn-client-id --query value -o tsv)
          SPN_SECRET=$(az keyvault secret show --vault-name $AKV --name spn-client-secret --query value -o tsv)
          echo "::add-mask::$SPN_SECRET"
          echo "TF_VAR_spn_client_id=$SPN_ID"         >> $GITHUB_ENV
          echo "TF_VAR_spn_client_secret=$SPN_SECRET" >> $GITHUB_ENV

      - name: Plan & Apply Remaining Infra
        run: |
          terraform -chdir=infra plan \
            -target=module.storage_for_uc \
            -target=module.storage_for_lake \
            -target=module.workspace_create \
            -out=infraplan

          terraform -chdir=infra apply -auto-approve infraplan
      
      - name: Upload Terraform State
        uses: actions/upload-artifact@v4
        with:
          name: tfstate-deployment
          path: infra/terraform.tfstate
    

  