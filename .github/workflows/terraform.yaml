name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  bootstrap:
    name: 1️⃣ Bootstrap SPN + AKV + Store Secrets
    runs-on: ubuntu-latest

    env:
      TF_VAR_subscription_id:     ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:           ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_admin_client_id:     ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_admin_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_bootstrap_spn_object_id: ${{ secrets.ARM_OBJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # 1) Cria SPN e Key Vault
      - name: Init & Apply SPN + Key Vault
        run: |
          cd infra
          terraform init
          # aplica SPN e KV juntos
          terraform apply -auto-approve -target=module.service_principal -target=module.key_vault

      # 2) Captura os outputs da SPN **dentro deste job somente**
      - name: Capture SPN outputs
        run: |
          cd infra
          SPN_ID=$(terraform output -raw spn_client_id)
          SPN_SECRET=$(terraform output -raw spn_client_secret)
          echo "::add-mask::$SPN_SECRET"

          # login com a SPN bootstrap/admin
          az login --service-principal \
            --username "${{ secrets.ARM_CLIENT_ID }}" \
            --password "${{ secrets.ARM_CLIENT_SECRET }}" \
            --tenant "${{ secrets.ARM_TENANT_ID }}"

          # grava direto no Key Vault
          AKV_NAME="akv-medalforge-rbac"
          az keyvault secret set --vault-name "$AKV_NAME" --name "spn-client-id"     --value "$SPN_ID"
          az keyvault secret set --vault-name "$AKV_NAME" --name "spn-client-secret" --value "$SPN_SECRET"

  deploy-infra:
    name: 2️⃣ Deploy Remaining Infra
    needs: bootstrap
    runs-on: ubuntu-latest

    env:
      TF_VAR_subscription_id:     ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:           ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_admin_client_id:     ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_admin_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_bootstrap_spn_object_id: ${{ secrets.ARM_OBJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Login com Azure CLI (SPN Bootstrap)
        run: |
          az login --service-principal \
            --username "${{ secrets.ARM_CLIENT_ID }}" \
            --password "${{ secrets.ARM_CLIENT_SECRET }}" \
            --tenant "${{ secrets.ARM_TENANT_ID }}"

      - name: Fetch SPN secrets from Key Vault
        id: get_secrets
        run: |
          AKV_NAME="akv-medalforge-rbac"
          SPN_ID=$(az keyvault secret show --vault-name "$AKV_NAME" --name "spn-client-id"     --query value -o tsv)
          SPN_SECRET=$(az keyvault secret show --vault-name "$AKV_NAME" --name "spn-client-secret" --query value -o tsv)
          echo "::add-mask::$SPN_SECRET"
          echo "SPN_ID=$SPN_ID"     >> $GITHUB_ENV
          echo "SPN_SECRET=$SPN_SECRET" >> $GITHUB_ENV

      - name: Init & Plan Remaining Infra
        env:
          TF_VAR_spn_client_id:     ${{ env.SPN_ID }}
          TF_VAR_spn_client_secret: ${{ env.SPN_SECRET }}
        run: |
          cd infra
          terraform init -upgrade
          terraform plan -out=infraplan

      - name: Apply Remaining Infra
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_spn_client_id:     ${{ env.SPN_ID }}
          TF_VAR_spn_client_secret: ${{ env.SPN_SECRET }}
        run: |
          cd infra
          terraform apply -auto-approve infraplan
