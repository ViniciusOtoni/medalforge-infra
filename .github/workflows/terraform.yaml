name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  create-spn:
    name: Create SPN
    runs-on: ubuntu-latest

    env:
      TF_VAR_subscription_id:     ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:           ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_admin_client_id:     ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_admin_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Init & Plan SPN
        run: |
          cd infra
          terraform init
          terraform plan -target=module.service_principal -out=spnplan

      - name: Apply SPN
        run: |
          cd infra
          terraform apply -auto-approve spnplan

  deploy-infra:
    name: Deploy Remaining Infra
    needs: create-spn
    runs-on: ubuntu-latest

    env:
      # credenciais admin (provider azuread.admin)
      TF_VAR_subscription_id:     ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:           ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_admin_client_id:     ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_admin_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Login com Azure CLI (SPN Bootstrap)
        run: |
          az login --service-principal \
            --username "${{ secrets.ARM_CLIENT_ID }}" \
            --password "${{ secrets.ARM_CLIENT_SECRET }}" \
            --tenant "${{ secrets.ARM_TENANT_ID }}"

      - name: Buscar Secrets do Azure Key Vault
        id: get_secrets
        run: |
          AKV_NAME="akv-medalforge-rbac"
          echo " Â» Buscando secrets no Key Vault: $AKV_NAME"
          
          SPN_ID=$(az keyvault secret show --vault-name "$AKV_NAME" --name "spn-client-id" --query "value" -o tsv)
          SPN_SECRET=$(az keyvault secret show --vault-name "$AKV_NAME" --name "spn-client-secret" --query "value" -o tsv)

          echo "::add-mask::$SPN_SECRET"
          echo "SPN_ID=$SPN_ID" >> $GITHUB_ENV
          echo "SPN_SECRET=$SPN_SECRET" >> $GITHUB_ENV

      - name: Init & Plan Infra
        env:
          TF_VAR_spn_client_id:     ${{ env.SPN_ID }}
          TF_VAR_spn_client_secret: ${{ env.SPN_SECRET }}
        run: |
          cd infra
          terraform init -upgrade
          terraform plan -out=infraplan

      - name: Apply Infra
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_spn_client_id:     ${{ env.SPN_ID }}
          TF_VAR_spn_client_secret: ${{ env.SPN_SECRET }}
        run: |
          cd infra
          terraform apply -auto-approve infraplan
