name: storage-foundation
on:
  workflow_run:
    workflows: ["landing-zone"]
    types: [completed]
  
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write
  actions: read

jobs:
  deploy-storage:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      TF_VAR_subscription_id:   ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:         ${{ secrets.ARM_TENANT_ID }}
     

    steps:
      - uses: actions/checkout@v4

      # 0) Código + login com a SPN BOOTSTRAP (Owner)
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # 1) Buscar credenciais da SPN DINÂMICA no Key Vault
      - name: Fetch dynamic-SPN creds from Key Vault
        id: kv
        run: |
          KV_NAME="akv-medalforge-rbac-core" 
          SPN_ID=$(az keyvault secret show --vault-name $KV_NAME --name spn-client-id     --query value -o tsv)
          SPN_SECRET=$(az keyvault secret show --vault-name $KV_NAME --name spn-client-secret --query value -o tsv)

          echo "::add-mask::$SPN_SECRET"

          # Variáveis usadas pelas inputs do módulo
          echo "TF_VAR_spn_client_id=$SPN_ID"        >> $GITHUB_ENV
          echo "TF_VAR_spn_client_secret=$SPN_SECRET" >> $GITHUB_ENV

          # Variáveis que o provider 'azurerm' reconhece implicitamente
          echo "ARM_CLIENT_ID=$SPN_ID"               >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$SPN_SECRET"       >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ env.TF_VAR_subscription_id }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ env.TF_VAR_tenant_id }}"             >> $GITHUB_ENV

      # 2) Obter a Access Key do Storage Account (para o backend)
      - name: Export ARM_ACCESS_KEY
        id: sa
        run: |
          SA_NAME="stmedalforgestate"
          RG_NAME=$(az storage account show --name $SA_NAME --query resourceGroup -o tsv)
          ACCESS_KEY=$(az storage account keys list --account-name $SA_NAME --query "[0].value" -o tsv)
          echo "::add-mask::$ACCESS_KEY"
          echo "ARM_ACCESS_KEY=$ACCESS_KEY" >> $GITHUB_ENV
          
          echo "rg=$RG_NAME" >> $GITHUB_OUTPUT
          echo "sa=$SA_NAME" >> $GITHUB_OUTPUT

      # 3) Terraform (autenticado como SPN dinâmica) + backend autenticado
      - name: Terraform init
        run: terraform -chdir=storage-foundation init

      - name: Terraform apply
        run: terraform -chdir=storage-foundation apply -auto-approve

      
