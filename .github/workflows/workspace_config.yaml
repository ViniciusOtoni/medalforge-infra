  workspace-config:
    name: 3️⃣ Configurar Unity Catalog e External Locations
    on:
      workflow_dispatch: {}

  jobs:
    workspace-config:
      name: Configurar Unity Catalog
      runs-on: ubuntu-latest

      env:
        AKV_NAME:                       "akv-medalforge-rbac-core"
        TF_VAR_admin_client_id:         ${{ secrets.ARM_CLIENT_ID }}
        TF_VAR_admin_client_secret:     ${{ secrets.ARM_CLIENT_SECRET }}
        TF_VAR_tenant_id:               ${{ secrets.ARM_TENANT_ID }}
        TF_VAR_subscription_id:         ${{ secrets.ARM_SUBSCRIPTION_ID }}
        TF_VAR_bootstrap_spn_object_id: ${{ secrets.ARM_OBJECT_ID }}

      steps:
        - uses: actions/checkout@v4

        - name: Baixar estado mais recente
          uses: actions/download-artifact@v4
          with:
            name: tfstate-deployment
            path: infra/

        - name: Azure Login (Admin SPN)
          uses: azure/login@v2
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: Fetch SPN credentials from AKV
          id: get_spn
          run: |
            SPN_ID=$(az keyvault secret show --vault-name $AKV_NAME --name spn-client-id --query value -o tsv)
            SPN_SECRET=$(az keyvault secret show --vault-name $AKV_NAME --name spn-client-secret --query value -o tsv)
            echo "::add-mask::$SPN_SECRET"
            echo "TF_VAR_spn_client_id=$SPN_ID"         >> $GITHUB_ENV
            echo "TF_VAR_spn_client_secret=$SPN_SECRET" >> $GITHUB_ENV

        - uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.6.6

        - name: Init Terraform
          run: terraform -chdir=infra init

        - name: Apply Unity Catalog & External Locations
          run: terraform -chdir=infra apply -auto-approve -target=module.workspace_config

        - name: Remover seu Owner como Admin da Workspace
          run: |
            WORKSPACE_ID=$(terraform -chdir=infra output -raw workspace_id)
            az role assignment delete \
              --assignee "${{ secrets.ARM_OWNER_ID }}" \
              --role "Databricks Workspace Admin" \
              --scope "$WORKSPACE_ID"