name: landing-zone
on:
  workflow_run:
    workflows: ["core-identity"]
    types: [completed]


jobs:
  landing-zone:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      TF_VAR_subscription_id:  ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:        ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_admin_client_id:  ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_admin_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}

    steps:
    - uses: actions/checkout@v4

    # artefato do core-identity
    - name: Download core-identity tfstate
      uses: dawidd6/action-download-artifact@v3
      with:
        workflow: core-identity
        run_id:  ${{ github.event.workflow_run.id }}
        name: tfstate-core
        path: core-identity

    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.6

    
    # 1) Bootstrapping – backend LOCAL

    # Esconde o backend azurerm original
    - name: Switch backend to local temporarily
      run: |
        mv landing-zone/backend.tf landing-zone/backend_remote.tf
        echo 'terraform { backend "local" {} }' > landing-zone/backend.tf

    - name: Terraform init (local)
      run: terraform -chdir=landing-zone init

    - name: Terraform apply (create SA)
      run: terraform -chdir=landing-zone apply -auto-approve

    # captura SA e RG
    - name: Capture outputs
      id: tfout
      run: |
        SA=$(terraform -chdir=landing-zone output -raw state_sa_name)
        RG=$(terraform -chdir=landing-zone output -raw state_rg_name)
        echo "sa=$SA" >> "$GITHUB_OUTPUT"
        echo "rg=$RG" >> "$GITHUB_OUTPUT"


    # 2) Migração – backend AZURERM

    # Restaura o backend remoto
    - name: Restore azurerm backend file
      run: |
        mv landing-zone/backend_remote.tf landing-zone/backend.tf

    - name: Terraform init (migrate to Azure Blob)
      run: |
        terraform -chdir=landing-zone init \
          -backend-config="storage_account_name=${{ steps.tfout.outputs.sa }}" \
          -backend-config="container_name=tfstate-landing" \
          -backend-config="resource_group_name=${{ steps.tfout.outputs.rg }}" \
          -backend-config="key=landing.tfstate" \
          -migrate-state -force-copy

    # validação final
    - name: Terraform apply (remote backend)
      run: terraform -chdir=landing-zone apply -auto-approve
