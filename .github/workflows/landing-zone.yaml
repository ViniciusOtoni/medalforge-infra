name: landing-zone
on:
  workflow_run:
    workflows: ["core-identity"]
    types: [completed]

permissions:
  contents: read
  id-token: write
  actions: read

jobs:
  Migration-Terraform-Backend:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      TF_VAR_subscription_id:  ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:        ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_admin_client_id:  ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_admin_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v4

      # Download do tfstate da core-identity
      - name: Download core-identity state
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: core-identity
          run_id:  ${{ github.event.workflow_run.id }}
          name: tfstate-core
          path: core-identity

      - name: Azure Login (SPN bootstrap)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # 1) Init / Apply (backend local)
      - name: Terraform Init (local)
        run: terraform -chdir=landing-zone init

      - name: Terraform Apply (create SA & container)
        run: terraform -chdir=landing-zone apply -auto-approve

      # 2) Captura outputs da SA criada
      - name: Read outputs
        id: tfout
        run: |
          SA=$(terraform -chdir=landing-zone output -raw state_sa_name)
          RG=$(terraform -chdir=landing-zone output -raw state_rg_name)
          echo "sa=$SA" >> $GITHUB_OUTPUT
          echo "rg=$RG" >> $GITHUB_OUTPUT

      # 3) Migrar state do landing-zone para SA
      - name: Migrate landing-zone state to Azure blob
        run: |
          terraform -chdir=landing-zone init \
            -backend-config="storage_account_name=${{ steps.tfout.outputs.sa }}" \
            -backend-config="container_name=tfstate-landing" \
            -backend-config="resource_group_name=${{ steps.tfout.outputs.rg }}" \
            -backend-config="key=landing.tfstate" \
            -migrate-state

            