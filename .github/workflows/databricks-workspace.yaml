name: databricks-workspace

on:
  workflow_call:
    secrets:
      AZURE_CREDENTIALS:   { required: true }
      ARM_SUBSCRIPTION_ID: { required: true }
      ARM_TENANT_ID:       { required: true }




permissions:
  contents: read
  id-token: write
  actions: read

jobs:
  deploy-dbx:
    runs-on: ubuntu-latest
    env:
      TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:       ${{ secrets.ARM_TENANT_ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ViniciusOtoni/sunny-data
          ref: main

      - name: Azure login (bootstrap)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform 1.6.6
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Busca client_id / secret da SPN dinâmica no Key Vault
      - name: Fetch dynamic-SPN creds
        id: kv
        run: |
          KV="akv-medalforge-rbac-core"
          SPN_ID=$(az keyvault secret show --vault-name "$KV" --name spn-client-id     -o tsv --query value)
          SPN_SECRET=$(az keyvault secret show --vault-name "$KV" --name spn-client-secret -o tsv --query value)
          echo "::add-mask::$SPN_SECRET"

          echo "TF_VAR_spn_client_id=$SPN_ID"         >> $GITHUB_ENV
          echo "TF_VAR_spn_client_secret=$SPN_SECRET" >> $GITHUB_ENV

          # -> Backend azurerm via SPN (evita Azure CLI as User)
          echo "ARM_CLIENT_ID=$SPN_ID"                 >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$SPN_SECRET"         >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ env.TF_VAR_subscription_id }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ env.TF_VAR_tenant_id }}"             >> $GITHUB_ENV

          # -> Provider Databricks (necessário em módulos)
          echo "AZURE_CLIENT_ID=$SPN_ID"              >> $GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=$SPN_SECRET"      >> $GITHUB_ENV
          echo "AZURE_TENANT_ID=${{ env.TF_VAR_tenant_id }}"          >> $GITHUB_ENV
          unset AZURE_FEDERATED_TOKEN_FILE || true

      - name: Terraform init (workspace)
        run: terraform -chdir=databricks-workspace init

      - name: Terraform apply (workspace)
        run: terraform -chdir=databricks-workspace apply -auto-approve
        
  cleanup-network-watcher:
    needs: deploy-dbx
    runs-on: ubuntu-latest
    steps:
      - name: Azure login (bootstrap)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Disable Network Watcher & delete RG
        run: |
          az network watcher configure --locations brazilsouth --enabled false
          az group delete -n NetworkWatcherRG --yes --no-wait || true