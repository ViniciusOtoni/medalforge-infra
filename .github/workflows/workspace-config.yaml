name: workspace-config

on:
  workflow_call:
    secrets:
      AZURE_CREDENTIALS:   { required: true }
      ARM_SUBSCRIPTION_ID: { required: true }
      ARM_TENANT_ID:       { required: true }
      ARM_ACCOUNT_ID:      { required: true }  


permissions:
  contents: read
  id-token: write
  actions: read

jobs:
  await-account-admin-grant:
    name: "ðŸš¦ Aguardar Grant (Account Admin) & Cadastro SECRET"
    runs-on: ubuntu-latest
    environment: approval-account-admin
    steps:
      - run: |
          echo "Abra o Databricks Account Console."
          echo "Atribua a SPN dinÃ¢mica como account_admin."
          echo "Cadastre o valor do ACCOUNT_ID na SECRET: ARM_ACCOUNT_ID."
          echo "Delete o metastore gerado por default."
          echo "Clique em 'Approve & deploy' para continuar."

  workspace-config:
    name: workspace-config
    needs: await-account-admin-grant
    runs-on: ubuntu-latest
    env:
      TF_VAR_subscription_id:      ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_tenant_id:            ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_databricks_account_id: ${{ secrets.ARM_ACCOUNT_ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ViniciusOtoni/sunny-data
          ref: main

      - name: Azure login (bootstrap)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform 1.6.6
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Busca novamente SPN dinÃ¢mica (UC)
      - name: Fetch dynamic-SPN creds (UC)
        id: kv_uc
        run: |
          KV="akv-medalforge-rbac-core"
          SPN_ID=$(az keyvault secret show --vault-name "$KV" --name spn-client-id     -o tsv --query value)
          SPN_SECRET=$(az keyvault secret show --vault-name "$KV" --name spn-client-secret -o tsv --query value)
          echo "::add-mask::$SPN_SECRET"

          echo "TF_VAR_spn_client_id=$SPN_ID"         >> $GITHUB_ENV
          echo "TF_VAR_spn_client_secret=$SPN_SECRET" >> $GITHUB_ENV

          echo "ARM_CLIENT_ID=$SPN_ID"                 >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$SPN_SECRET"         >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ env.TF_VAR_subscription_id }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ env.TF_VAR_tenant_id }}"             >> $GITHUB_ENV

          echo "AZURE_CLIENT_ID=$SPN_ID"              >> $GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=$SPN_SECRET"      >> $GITHUB_ENV
          echo "AZURE_TENANT_ID=${{ env.TF_VAR_tenant_id }}"          >> $GITHUB_ENV
          unset AZURE_FEDERATED_TOKEN_FILE || true
          echo "AZURE_FEDERATED_TOKEN_FILE=" >> $GITHUB_ENV

      - name: Terraform init (UC)
        run: terraform -chdir=workspace-config init -upgrade -reconfigure

      - name: Terraform apply (UC)
        run: terraform -chdir=workspace-config apply -auto-approve
